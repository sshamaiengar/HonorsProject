/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2012, Ajax.org B.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

/* This file was autogenerated from tmthemes/snappy-light.tmTheme (uuid: ) */
/****************************************************************************************
 * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *
 * fileTypes                                                                            *
 ****************************************************************************************/

define(function(require, exports, module) {
"use strict";

var oop = require("../lib/oop");
var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;

var SnappyLightHighlightRules = function() {
    // regexp must not have capturing parentheses. Use (?:) instead.
    // regexps are ordered -> the first match is used

    this.$rules = {
        start: []
    }
    
    this.normalizeRules();
};

SnappyLightHighlightRules.metaData = {
    name: "Snappy Light",
    settings: [{
        settings: {
            background: "#ffffff",
            caret: "#444444",
            foreground: "#555555",
            invisibles: "#3b3a32",
            lineHighlight: "#eeeeee",
            selection: "#808dd3",
            selectionForeground: "#ffffff",
            findHighlight: "#ffe792",
            findHighlightForeground: "#000000",
            selectionBorder: "#ffffff",
            activeGuide: "#9d550fb0",
            bracketsForeground: "#808dd3",
            bracketsOptions: "underline",
            bracketContentsForeground: "#f66153",
            bracketContentsOptions: "underline",
            tagsOptions: "stippled_underline"
        }
    }, {
        name: "Comment",
        scope: "comment",
        settings: {
            foreground: "#bbbbbb"
        }
    }, {
        name: "String",
        scope: "string",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "Number",
        scope: "constant.numeric",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "Built-in constant",
        scope: "constant.language",
        settings: {
            foreground: "#f66153"
        }
    }, {
        name: "User-defined constant",
        scope: "constant.character, constant.other",
        settings: {
            foreground: "#f66153"
        }
    }, {
        name: "Variable",
        scope: "variable",
        settings: {
            fontStyle: ""
        }
    }, {
        name: "Keyword",
        scope: "keyword",
        settings: {
            foreground: "#da564a"
        }
    }, {
        name: "Storage",
        scope: "storage",
        settings: {
            fontStyle: "",
            foreground: "#f66153"
        }
    }, {
        name: "Storage type",
        scope: "storage.type",
        settings: {
            fontStyle: "",
            foreground: "#4ea1df"
        }
    }, {
        name: "Class name",
        scope: "entity.name.class",
        settings: {
            fontStyle: "underline",
            foreground: "#f66153"
        }
    }, {
        name: "Inherited class",
        scope: "entity.other.inherited-class",
        settings: {
            fontStyle: "italic underline",
            foreground: "#f66153"
        }
    }, {
        name: "Function name",
        scope: "entity.name.function",
        settings: {
            fontStyle: "",
            foreground: "#808dd3"
        }
    }, {
        name: "Function argument",
        scope: "variable.parameter",
        settings: {
            fontStyle: "italic",
            foreground: ""
        }
    }, {
        name: "Tag name",
        scope: "entity.name.tag",
        settings: {
            fontStyle: "",
            foreground: "#4ea1df"
        }
    }, {
        name: "Tag attribute",
        scope: "entity.other.attribute-name",
        settings: {
            fontStyle: "",
            foreground: "#f66153"
        }
    }, {
        name: "Library function",
        scope: "support.function",
        settings: {
            fontStyle: "",
            foreground: "#606aa1"
        }
    }, {
        name: "Library constant",
        scope: "support.constant",
        settings: {
            fontStyle: "",
            foreground: "#f66153"
        }
    }, {
        name: "Library class/type",
        scope: "support.type, support.class",
        settings: {
            fontStyle: "italic",
            foreground: "#f66153"
        }
    }, {
        name: "Library variable",
        scope: "support.other.variable",
        settings: {
            fontStyle: ""
        }
    }, {
        name: "Invalid",
        scope: "invalid",
        settings: {
            background: "#00a8c6",
            fontStyle: "",
            foreground: "#f8f8f0"
        }
    }, {
        name: "Invalid deprecated",
        scope: "invalid.deprecated",
        settings: {
            background: "#00a8c6",
            foreground: "#f8f8f0"
        }
    }, {
        name: "JSON String",
        scope: "meta.structure.dictionary.json string.quoted.double.json",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "diff.header",
        scope: "meta.diff, meta.diff.header",
        settings: {
            foreground: "#75715E"
        }
    }, {
        name: "diff.deleted",
        scope: "markup.deleted",
        settings: {
            foreground: "#00A8C6"
        }
    }, {
        name: "diff.inserted",
        scope: "markup.inserted",
        settings: {
            foreground: "#A6E22E"
        }
    }, {
        name: "diff.changed",
        scope: "markup.changed",
        settings: {
            foreground: "#E6DB74"
        }
    }, {
        scope: "constant.numeric.line-number.find-in-files - match",
        settings: {
            foreground: "#8FBE00A0"
        }
    }, {
        scope: "entity.name.filename.find-in-files",
        settings: {
            foreground: "#E6DB74"
        }
    }, {
        scope: "keyword.other",
        settings: {
            foreground: "#7d7d7d"
        }
    }, {
        scope: "meta.property-value, support.constant.property-value, constant.other.color",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        scope: "meta.structure.dictionary.json string.quoted.double.json",
        settings: {
            foreground: "#f66153"
        }
    }, {
        scope: "meta.structure.dictionary.value.json string.quoted.double.json",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "Function argument",
        scope: "meta.property-name support.type.property-name",
        settings: {
            fontStyle: "normal"
        }
    }, {
        name: "Function argument",
        scope: "meta.property-value punctuation.separator.key-value",
        settings: {
            foreground: "#555555"
        }
    }, {
        name: "Function argument",
        scope: "keyword.other.use, keyword.other.function.use, keyword.other.namespace, keyword.other.new, keyword.other.special-method, keyword.other.unit, keyword.other.use-as",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "Function argument",
        scope: "meta.use support.class.builtin, meta.other.inherited-class support.class.builtin",
        settings: {
            foreground: "#555555",
            fontStyle: "normal"
        }
    }, {
        name: "Function argument",
        scope: "variable.other",
        settings: {
            foreground: "",
            fontStyle: "normal"
        }
    }, {
        name: "Coffeescript Function argument",
        scope: "variable.parameter.function.coffee",
        settings: {
            foreground: "#4ea1df",
            fontStyle: "italic"
        }
    }, {
        name: "Markdown Titles",
        scope: "entity.name.section.markdown",
        settings: {
            foreground: "#f66153"
        }
    }, {
        name: "Markdown Title Hash",
        scope: "punctuation.definition.heading.markdown",
        settings: {
            foreground: "#da564a"
        }
    }, {
        name: "Markdown Raw",
        scope: "markup.raw.inline.markdown",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "Markdown bold stars",
        scope: "punctuation.definition.bold.markdown, punctuation.definition.italic.markdown",
        settings: {
            foreground: "#da564a"
        }
    }, {
        name: "Markdown link title braces",
        scope: "punctuation.definition.string.begin.markdown, punctuation.definition.string.end.markdown",
        settings: {
            foreground: "#da564a"
        }
    }, {
        name: "Markdown link braces",
        scope: "punctuation.definition.metadata.markdown",
        settings: {
            foreground: "#da564a"
        }
    }, {
        name: "Markdown link",
        scope: "markup.underline.link.markdown, markup.underline.link.image.markdown, meta.image.inline.markdown",
        settings: {
            foreground: "#4ea1df",
            fontStyle: "italic"
        }
    }, {
        name: "Markdown bold/italic",
        scope: "markup.bold.markdown, markup.italic.markdown",
        settings: {
            foreground: "#4ea1df"
        }
    }, {
        name: "Markdown bold/italic",
        scope: "markup.italic.markdown",
        settings: {
            fontStyle: "italic"
        }
    }, {
        name: "Markdown bold/italic",
        scope: "markup.bold.markdown",
        settings: {
            fontStyle: "bold"
        }
    }, {
        name: "Markdown pre",
        scope: "markup.raw.block.markdown",
        settings: {
            foreground: "#00a8c6"
        }
    }, {
        name: "GitGutter deleted",
        scope: "markup.deleted.git_gutter",
        settings: {
            foreground: "#e61f44"
        }
    }, {
        name: "GitGutter inserted",
        scope: "markup.inserted.git_gutter",
        settings: {
            foreground: "#a7da1e"
        }
    }, {
        name: "GitGutter changed",
        scope: "markup.changed.git_gutter",
        settings: {
            foreground: "#f7b83d"
        }
    }, {
        name: "CSS Class",
        scope: "entity.other.attribute-name.class.css",
        settings: {
            foreground: "#808dd3"
        }
    }]
}


oop.inherits(SnappyLightHighlightRules, TextHighlightRules);

exports.SnappyLightHighlightRules = SnappyLightHighlightRules;
});